<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wblog.dao.PaperMapper">
  <resultMap id="BaseResultMap" type="cn.wblog.entity.Paper">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="one_id" jdbcType="INTEGER" property="oneId" />
    <result column="two_id" jdbcType="INTEGER" property="twoId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.wblog.entity.Paper">
    <result column="paper" jdbcType="LONGVARCHAR" property="paper" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, time, author, user_id, one_id, two_id
  </sql>
  <sql id="Blob_Column_List">
    paper
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.wblog.entity.PaperExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.wblog.entity.PaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from paper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from paper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wblog.entity.PaperExample">
    delete from paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wblog.entity.Paper">
    insert into paper (id, title, time, 
      author, user_id, one_id, 
      two_id, paper)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{oneId,jdbcType=INTEGER}, 
      #{twoId,jdbcType=INTEGER}, #{paper,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wblog.entity.Paper">
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="oneId != null">
        one_id,
      </if>
      <if test="twoId != null">
        two_id,
      </if>
      <if test="paper != null">
        paper,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="oneId != null">
        #{oneId,jdbcType=INTEGER},
      </if>
      <if test="twoId != null">
        #{twoId,jdbcType=INTEGER},
      </if>
      <if test="paper != null">
        #{paper,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wblog.entity.PaperExample" resultType="java.lang.Long">
    select count(*) from paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update paper
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.oneId != null">
        one_id = #{record.oneId,jdbcType=INTEGER},
      </if>
      <if test="record.twoId != null">
        two_id = #{record.twoId,jdbcType=INTEGER},
      </if>
      <if test="record.paper != null">
        paper = #{record.paper,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update paper
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      one_id = #{record.oneId,jdbcType=INTEGER},
      two_id = #{record.twoId,jdbcType=INTEGER},
      paper = #{record.paper,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update paper
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      one_id = #{record.oneId,jdbcType=INTEGER},
      two_id = #{record.twoId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wblog.entity.Paper">
    update paper
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="oneId != null">
        one_id = #{oneId,jdbcType=INTEGER},
      </if>
      <if test="twoId != null">
        two_id = #{twoId,jdbcType=INTEGER},
      </if>
      <if test="paper != null">
        paper = #{paper,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.wblog.entity.Paper">
    update paper
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      one_id = #{oneId,jdbcType=INTEGER},
      two_id = #{twoId,jdbcType=INTEGER},
      paper = #{paper,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wblog.entity.Paper">
    update paper
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      one_id = #{oneId,jdbcType=INTEGER},
      two_id = #{twoId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>